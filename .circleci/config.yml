version: 2.1
commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          command: |
            aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID}
  ######### test 2
jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["87:e7:7f:be:57:f6:0b:b5:e8:44:f2:68:2b:79:4a:e9"] 
      - run:
          name: Ensure backend infrastructure exist
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/template.yml \
              --stack-name prod-${CIRCLE_WORKFLOW_ID}
      - run:
          when: on_fail
          name: Destroy environment
          command: |
            aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID}
###########################
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["87:e7:7f:be:57:f6:0b:b5:e8:44:f2:68:2b:79:4a:e9"] 
      - run: |
          aws cloudformation deploy --template-file .circleci//bucket.yml --stack-name prod-${CIRCLE_WORKFLOW_ID:0:7} --parameter-overrides ID=${CIRCLE_WORKFLOW_ID:0:7} --tags project=udapeople
      - run: aws s3 sync . s3://udapeople-${CIRCLE_WORKFLOW_ID:0:7}  --delete
          
# ${CIRCLE_WORKFLOW_ID:0:7} takes the first 7 chars of the variable CIRCLE_CI_WORKFLOW_ID

################################################
  get_last_deployment_id:
    docker:
#      - image: circleci/node:13.8.0
      - image: amazon/aws-cli
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["87:e7:7f:be:57:f6:0b:b5:e8:44:f2:68:2b:79:4a:e9"] 
      - run:
          name: Install tar/gzip utility
          command: |
            yum -y install tar
#     - run:
#          name: "upgrade packages."
#            become: true
#            apt:
#              upgrade: "yes"
#      - run:
#          name: "install dependencies."
#            become: true
#            apt:
#              name: ["nodejs", "npm"]
#              update_cache: yes
      - run:
          name: Ensure backend infrastructure exist
          command: |
            aws cloudformation list-exports --query "Exports[?Name==\`PipelineID\`].Value" --no-paginate --output text
############################################
  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["87:e7:7f:be:57:f6:0b:b5:e8:44:f2:68:2b:79:4a:e9"] 
      - run:
          name: Ensure backend infrastructure exist
          command: |
            aws cloudformation deploy --template-file .circleci//cloudfront.yml --stack-name production-distro --parameter-overrides PipelineID=pipeline-${CIRCLE_WORKFLOW_ID:0:7}
#########################################
  clean_up_old_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["87:e7:7f:be:57:f6:0b:b5:e8:44:f2:68:2b:79:4a:e9"] 
      - run:
          name: Ensure backend infrastructure exist
          command: |
            aws s3 rm "s3://${OldPipelineID}" --recursive 
            aws cloudformation delete-stack --stack-name "${PreviousPipelineID}"
workflows:
  default:
    jobs:
      - get_last_deployment_id
      - 
        create_and_deploy_front_end:
          requires:
            - get_last_deployment_id
      - 
        promote_to_production:
          requires: 
            - create_and_deploy_front_end
          
